{"version":3,"file":"component---src-pages-index-tsx-c16cb2e01f7b32df7973.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/assets/banner.png","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/SearchBar.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ntype CategoryItemProps = {\n  active: boolean\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode\n  className?: string\n  to: string\n} & CategoryItemProps\n\nexport type CategoryListProps = {\n  selectedCategory: string\n  categoryList: {\n    //프로퍼티 이름은 문자열, 프로퍼티 값은 숫자임을 나타내는 타입 표기 방법\n    [key: string]: number\n  }\n}\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 768px;\n  margin: 100px auto 0;\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          #{name}({count})\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  )\n}\n\nexport default CategoryList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\n  profileImage,\n}) {\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\n}\n\nexport default ProfileImage\n","export default __webpack_public_path__ + \"static/banner-efe5d4906e434ad2ade6115e163ec996.png\";","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport ProfileImage from 'components/Main/ProfileImage'\nimport backgroundImage from '../../assets/banner.png'\nimport { FaGithub } from 'react-icons/fa'\nimport { SiNotion } from 'react-icons/si'\nimport { SiGmail } from 'react-icons/si'\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData\n}\n// background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n// const backgroundImage = '../../assets/banner.png'\nconst Background = styled.div`\n  width: 100%;\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  color: #fff;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 768px;\n  height: 400px;\n  margin: 0 auto;\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n    padding: 0 20px;\n  }\n`\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 800;\n  color: #000;\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 35px;\n  font-weight: 900;\n  color: #000;\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n  margin-bottom: 20px;\n`\n\nconst goTo = (location: string) => {\n  if (location == 'github') {\n    window.open('https://github.com/shinsj4653', '_blank')\n  } else if (location === 'notion') {\n    window.open(\n      'https://forested-dive-1ea.notion.site/Welcome-to-my-Notion-Page-0fda5a0b60d94c0bbd0ea579a226fc31',\n      '_blank',\n    )\n  } else if (location === 'gmail') {\n    window.open('mailto:shinsj4653@gmail.com', '_blank')\n  }\n}\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\n  profileImage,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <ProfileImage profileImage={profileImage} />\n        <div>\n          <SubTitle>Nice to Meet You,</SubTitle>\n          <Title>I'm an Ardent Engineer Shin.</Title>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <FaGithub\n            size=\"30\"\n            color=\"black\"\n            style={{ cursor: 'pointer', marginRight: '15px' }}\n            title=\"Visit Github\"\n            onClick={() => {\n              goTo('github')\n            }}\n          />\n          <SiNotion\n            size=\"30\"\n            color=\"black\"\n            style={{ cursor: 'pointer', marginRight: '15px' }}\n            title=\"Visit Notion\"\n            onClick={() => {\n              goTo('notion')\n            }}\n          />\n          <SiGmail\n            size=\"30\"\n            color=\"black\"\n            style={{ cursor: 'pointer' }}\n            title=\"shinsj4653@gmail.com\"\n            onClick={() => {\n              goTo('gmail')\n            }}\n          />\n        </div>\n      </Wrapper>\n    </Background>\n  )\n}\n\nexport default Introduction\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { PostFrontmatterType } from 'types/PostItem.types'\n\ntype PostItemProps = PostFrontmatterType & { link: string }\n\n// type PostItemProps = {\n//   title: string\n//   date: string\n//   categories: string[]\n//   summary: string\n//   thumbnail: {\n//     publicURL: string\n//   }\n//   link: string\n// }\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(item => {\n            switch (item) {\n              case 'MarkDown':\n                return (\n                  <CategoryItem style={{ backgroundColor: '#000' }} key={item}>\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'FastCampus':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#E62249' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'JavaScript':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#FFE300', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'NodeJS':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#85BD6F', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'CSS':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#2794CD', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'HTML':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#F1672B', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Github':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#E4E4E4', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'WebProgramming':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#000', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'KU':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#046B3F', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Redux':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#8041C4', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'TypeScript':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#3178C6', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'MobX':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#e25f13', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Gatsby':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#663399', color: '#FFF' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Velopert':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#f7f7f7', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'React':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#00D8FF', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'CodingAngma':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#1E1E1E', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'React Native':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#04A6CF', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n              case 'React Query':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#264057', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Coding Test':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#264057', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'UMC':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#00FF6F', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Enwise':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#fff', color: '#000' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Python':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#5194C8', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'CodingApple':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#ff3d3d', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'CS':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#7726EE', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n              case 'Network':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#17d320', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Java':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#E51F24', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Spring':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#65B742', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'VISANG':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#00B6E4', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'AWS':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#F79300', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'ElasticSearch':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#45B7AA', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Airflow':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#017CEE', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Logstash':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#F5C11C', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Kibana':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#EA4E90', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'CDC':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#5186EC', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n              \n              case 'OpenSource':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#40AA54', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n\n              case 'Oracle':\n                return (\n                  <CategoryItem\n                    style={{ backgroundColor: '#FF141D', color: '#fff' }}\n                    key={item}\n                  >\n                    {item}\n                  </CategoryItem>\n                )\n              \n            }\n          })}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  )\n}\n\nexport default PostItem\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\nimport { PostListItemType } from 'types/PostItem.types'\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: PostListItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n): useInfiniteScrollType {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n\nexport default useInfiniteScroll\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: border-color 0.3s, box-shadow 0.3s;\n\n  &:focus {\n    border-color: #007acc;\n    box-shadow: 0 0 5px rgba(0, 122, 204, 0.5);\n    outline: none;\n  }\n`\n\nconst SearchBar = ({ value, onChange }) => {\n  return (\n    <SearchInput\n      type=\"text\"\n      placeholder=\"검색할 내용을 입력하세요.\"\n      value={value}\n      onChange={onChange}\n    />\n  )\n}\n\nexport default SearchBar","import React, { FunctionComponent, useMemo, useState, useRef } from 'react'\nimport styled from '@emotion/styled'\nimport PostItem from 'components/Main/PostItem'\nimport { PostListItemType } from 'types/PostItem.types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\nimport SearchBar from 'components/Main/SearchBar'\n\nexport type PostType = {\n  node: {\n    id: string\n    frontmatter: {\n      title: string\n      summary: string\n      date: string\n      categories: string[]\n      thumbnail: {\n        publicURL: string\n      }\n    }\n  }\n}\n\ntype PostListProps = {\n  selectedCategory: string\n  posts: PostListItemType[]\n}\n\nconst Container = styled.div`\n  position: relative;\n  max-width: 768px;\n  margin: 0 auto;\n  padding: 50px 0;\n`\n\nconst SearchBarWrapper = styled.div`\n  position: sticky;\n  top: 0;\n  z-index: 10;\n`\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  margin-top: 20px;\n  min-width: 768px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 0 20px;\n  }\n`\n\nconst Placeholder = styled.div`\n  grid-column: 1 / -1;\n  text-align: center;\n  padding: 50px 0;\n  font-size: 18px;\n  color: #888;\n`\nconst PostList: FunctionComponent<PostListProps> = function ({\n  selectedCategory,\n  posts,\n}) {\n\n  const [searchKeyword, setSearchKeyword] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n\n  const handleSearchChange = (event) => {\n    const { scrollTop, scrollLeft } = containerRef.current\n\n    setSearchKeyword(event.target.value)\n    requestAnimationFrame(() => {\n      containerRef.current.scrollTop = scrollTop\n      containerRef.current.scrollLeft = scrollLeft\n    })\n  }\n\n  const filteredPosts = useMemo(() => {\n    return postList.filter(({ node: { frontmatter } }) => {\n      const { title, summary, categories } = frontmatter\n      return (\n        title.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        summary.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        categories.join('').toLowerCase().includes(searchKeyword.toLowerCase()) ||\n        searchTerm.toLowerCase().includes(searchKeyword.toLowerCase()) \n        )\n    })\n  }, [searchKeyword, postList, searchTerm, selectedCategory, posts])\n\n  return (\n    <Container>\n      <SearchBarWrapper>\n        <SearchBar\n          value={searchKeyword}\n          onChange={handleSearchChange}\n        />\n      </SearchBarWrapper>\n      <PostListWrapper ref={containerRef}>\n        {filteredPosts.length > 0 ? (\n          filteredPosts.map(\n            ({\n              node: {\n                id,\n                fields: { slug },\n                frontmatter,\n              },\n            }) => (\n              <PostItem {...frontmatter} link={slug} key={id} />\n            ),\n          )\n        ) : (\n          <Placeholder>검색 결과가 존재하지 않습니다.</Placeholder>\n        )}\n      </PostListWrapper>\n    </Container>\n  )\n}\n\nexport default PostList","import React, { FunctionComponent, useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport GlobalStyle from 'components/Common/GlobalStyle'\nimport Footer from 'components/Common/Footer'\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\nimport Introduction from 'components/Main/Introduction'\nimport PostList from 'components/Main/PostList'\nimport { graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { PostListItemType } from 'types/PostItem.types'\nimport queryString, { ParsedQuery } from 'query-string'\nimport Template from 'components/Common/Template'\nimport SearchBar from 'components/Main/SearchBar'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedCategory: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? 'All'\n      : parsed.category\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  )\n}\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","isArray","val","indexOf","CategoryListWrapper","CategoryItem","_styled","_ref","active","props","___EmotionJSX","Link","_ref2","selectedCategory","categoryList","_ref3","map","_ref4","name","count","to","ProfileImageWrapper","GatsbyImage","process","profileImage","image","alt","Background","backgroundImage","Wrapper","SubTitle","Title","goTo","location","window","open","ProfileImage","style","display","FaGithub","size","color","cursor","marginRight","title","onClick","SiNotion","SiGmail","ThumbnailImage","PostItemWrapper","PostItemContent","Date","Category","Summary","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","item","backgroundColor","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","target","children","observe","postList","SearchInput","onChange","type","placeholder","Container","SearchBarWrapper","PostListWrapper","Placeholder","searchKeyword","setSearchKeyword","searchTerm","setSearchTerm","useInfiniteScroll","filteredPosts","toLowerCase","SearchBar","event","scrollTop","scrollLeft","requestAnimationFrame","ref","id","fields","slug","PostItem","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","queryString","category","reduce","list","forEach","undefined","All","Template","url","Introduction","CategoryList","PostList","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","keysSorter","sort","a","b","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","isEncodedArray","newValue","test","arrayValue","parserForArrayFormat","create","param","k","Boolean","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","x","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","exclude","exclusionFilter","string","separator","separatorIndex","str","charCodeAt","toString","toUpperCase"],"sourceRoot":""}